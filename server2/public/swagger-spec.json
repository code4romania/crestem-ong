{
  "openapi": "3.1.0",
  "x-powered-by": "strapi",
  "x-strapi-version": "5.23.4",
  "info": {
    "title": "server-2",
    "description": "API documentation for server-2 v0.1.0",
    "version": "0.1.0"
  },
  "paths": {
    "/activities": {
      "get": {
        "operationId": "activity/get/activities",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "startDate",
                    "notes",
                    "duration",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "startDate",
                      "notes",
                      "duration",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "startDate",
                      "notes",
                      "duration",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "startDate",
                        "notes",
                        "duration",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "type",
                    "dimension",
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "type",
                      "dimension",
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "startDate": {
                            "description": "A date field",
                            "type": "string"
                          },
                          "notes": {
                            "description": "A richtext field",
                            "type": "string"
                          },
                          "duration": {
                            "description": "An integer field",
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.244Z",
                            "type": "string"
                          },
                          "type": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiActivityTypeActivityTypeDocument"
                          },
                          "dimension": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                          },
                          "mentor": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          },
                          "user": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "startDate",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity"
        ]
      },
      "post": {
        "operationId": "activity/post/activities",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "type",
                    "dimension",
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "type",
                      "dimension",
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "notes": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "duration": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.297Z",
                          "type": "string"
                        },
                        "type": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiActivityTypeActivityTypeDocument"
                        },
                        "dimension": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "startDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "notes": {
                        "description": "A richtext field",
                        "type": "string"
                      },
                      "duration": {
                        "description": "A float field",
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.295Z",
                        "type": "string"
                      },
                      "type": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "dimension": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "mentor": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "startDate",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "get": {
        "operationId": "activity/get/activities_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "type",
                    "dimension",
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "type",
                      "dimension",
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "startDate",
                    "notes",
                    "duration",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "startDate",
                      "notes",
                      "duration",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "startDate",
                      "notes",
                      "duration",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "startDate",
                        "notes",
                        "duration",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "notes": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "duration": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.289Z",
                          "type": "string"
                        },
                        "type": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiActivityTypeActivityTypeDocument"
                        },
                        "dimension": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "startDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity"
        ]
      },
      "put": {
        "operationId": "activity/put/activities_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "type",
                    "dimension",
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "type",
                      "dimension",
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "notes": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "duration": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.304Z",
                          "type": "string"
                        },
                        "type": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiActivityTypeActivityTypeDocument"
                        },
                        "dimension": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "startDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "notes": {
                        "description": "A richtext field",
                        "type": "string"
                      },
                      "duration": {
                        "description": "A float field",
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.302Z",
                        "type": "string"
                      },
                      "type": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "dimension": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "mentor": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "activity/delete/activities_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "type",
                    "dimension",
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "type",
                      "dimension",
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "startDate",
                  "notes",
                  "duration",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "notes": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "duration": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.307Z",
                          "type": "string"
                        },
                        "type": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiActivityTypeActivityTypeDocument"
                        },
                        "dimension": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "startDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity"
        ]
      }
    },
    "/activity-types": {
      "get": {
        "operationId": "activity-type/get/activity_types",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.313Z",
                            "type": "string"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity-type"
        ]
      },
      "post": {
        "operationId": "activity-type/post/activity_types",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.327Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity-type"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:38:03.737Z",
                        "type": "string"
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/activity-types/{id}": {
      "get": {
        "operationId": "activity-type/get/activity_types_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.321Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity-type"
        ]
      },
      "put": {
        "operationId": "activity-type/put/activity_types_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.332Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity-type"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.330Z",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "activity-type/delete/activity_types_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.336Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "activity-type"
        ]
      }
    },
    "/dimensions": {
      "get": {
        "operationId": "dimension/get/dimensions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "link",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "link",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "link",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "link",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "quiz",
                    "mentors",
                    "activities"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quiz",
                      "mentors",
                      "activities"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "link": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.347Z",
                            "type": "string"
                          },
                          "quiz": {
                            "description": "A component field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/MatrixQuestionEntry"
                            }
                          },
                          "mentors": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                            }
                          },
                          "activities": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiActivityActivityDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "name",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dimension"
        ]
      },
      "post": {
        "operationId": "dimension/post/dimensions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "quiz",
                    "mentors",
                    "activities"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quiz",
                      "mentors",
                      "activities"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "link": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.367Z",
                          "type": "string"
                        },
                        "quiz": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MatrixQuestionEntry"
                          }
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "activities": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiActivityActivityDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dimension"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "link": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.365Z",
                        "type": "string"
                      },
                      "quiz": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      },
                      "mentors": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "activities": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/dimensions/{id}": {
      "get": {
        "operationId": "dimension/get/dimensions_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "quiz",
                    "mentors",
                    "activities"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quiz",
                      "mentors",
                      "activities"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "link",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "link",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "link",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "link",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "link": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.354Z",
                          "type": "string"
                        },
                        "quiz": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MatrixQuestionEntry"
                          }
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "activities": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiActivityActivityDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dimension"
        ]
      },
      "put": {
        "operationId": "dimension/put/dimensions_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "quiz",
                    "mentors",
                    "activities"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quiz",
                      "mentors",
                      "activities"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "link": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.371Z",
                          "type": "string"
                        },
                        "quiz": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MatrixQuestionEntry"
                          }
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "activities": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiActivityActivityDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dimension"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "link": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.370Z",
                        "type": "string"
                      },
                      "quiz": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      },
                      "mentors": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "activities": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "dimension/delete/dimensions_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "quiz",
                    "mentors",
                    "activities"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quiz",
                      "mentors",
                      "activities"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "link",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "link": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.374Z",
                          "type": "string"
                        },
                        "quiz": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MatrixQuestionEntry"
                          }
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "activities": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiActivityActivityDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dimension"
        ]
      }
    },
    "/domains": {
      "get": {
        "operationId": "domain/get/domains",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.379Z",
                            "type": "string"
                          },
                          "mentors": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "domain"
        ]
      },
      "post": {
        "operationId": "domain/post/domains",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.389Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.388Z",
                        "type": "string"
                      },
                      "mentors": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/domains/{id}": {
      "get": {
        "operationId": "domain/get/domains_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.384Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "domain"
        ]
      },
      "put": {
        "operationId": "domain/put/domains_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.392Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.391Z",
                        "type": "string"
                      },
                      "mentors": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "domain/delete/domains_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.395Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "domain"
        ]
      }
    },
    "/evaluations": {
      "get": {
        "operationId": "evaluation/get/evaluations",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "email",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "email",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions",
                    "report"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions",
                      "report"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "email": {
                            "description": "An email field",
                            "type": "string",
                            "format": "email",
                            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.400Z",
                            "type": "string"
                          },
                          "dimensions": {
                            "description": "A component field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/EvaluationDimensionEntry"
                            }
                          },
                          "report": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiReportReportDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "email",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "evaluation"
        ]
      },
      "post": {
        "operationId": "evaluation/post/evaluations",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions",
                    "report"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions",
                      "report"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.409Z",
                          "type": "string"
                        },
                        "dimensions": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/EvaluationDimensionEntry"
                          }
                        },
                        "report": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiReportReportDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "email",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "evaluation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "description": "An email field",
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.408Z",
                        "type": "string"
                      },
                      "dimensions": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      },
                      "report": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "email",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/evaluations/{id}": {
      "get": {
        "operationId": "evaluation/get/evaluations_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions",
                    "report"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions",
                      "report"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "email",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "email",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.406Z",
                          "type": "string"
                        },
                        "dimensions": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/EvaluationDimensionEntry"
                          }
                        },
                        "report": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiReportReportDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "email",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "evaluation"
        ]
      },
      "put": {
        "operationId": "evaluation/put/evaluations_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions",
                    "report"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions",
                      "report"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.413Z",
                          "type": "string"
                        },
                        "dimensions": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/EvaluationDimensionEntry"
                          }
                        },
                        "report": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiReportReportDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "email",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "evaluation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "description": "An email field",
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.411Z",
                        "type": "string"
                      },
                      "dimensions": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      },
                      "report": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "evaluation/delete/evaluations_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions",
                    "report"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions",
                      "report"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.416Z",
                          "type": "string"
                        },
                        "dimensions": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/EvaluationDimensionEntry"
                          }
                        },
                        "report": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiReportReportDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "email",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "evaluation"
        ]
      }
    },
    "/matrix": {
      "get": {
        "operationId": "matrix/get/matrix",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.421Z",
                          "type": "string"
                        },
                        "dimensions": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "matrix"
        ]
      },
      "put": {
        "operationId": "matrix/put/matrix",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.424Z",
                          "type": "string"
                        },
                        "dimensions": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "matrix"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.423Z",
                        "type": "string"
                      },
                      "dimensions": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "matrix/delete/matrix",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "dimensions"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "dimensions"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.426Z",
                          "type": "string"
                        },
                        "dimensions": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "matrix"
        ]
      }
    },
    "/mentorship-requests": {
      "get": {
        "operationId": "mentorship-request/get/mentorship_requests",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.430Z",
                            "type": "string"
                          },
                          "mentor": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          },
                          "user": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "mentorship-request"
        ]
      },
      "post": {
        "operationId": "mentorship-request/post/mentorship_requests",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.439Z",
                          "type": "string"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "mentorship-request"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.438Z",
                        "type": "string"
                      },
                      "mentor": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/mentorship-requests/{id}": {
      "get": {
        "operationId": "mentorship-request/get/mentorship_requests_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.433Z",
                          "type": "string"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "mentorship-request"
        ]
      },
      "put": {
        "operationId": "mentorship-request/put/mentorship_requests_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.441Z",
                          "type": "string"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "mentorship-request"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.440Z",
                        "type": "string"
                      },
                      "mentor": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "mentorship-request/delete/mentorship_requests_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentor",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentor",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.442Z",
                          "type": "string"
                        },
                        "mentor": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "mentorship-request"
        ]
      }
    },
    "/programs": {
      "get": {
        "operationId": "program/get/programs",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "startDate",
                    "endDate",
                    "sponsorName",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "startDate",
                      "endDate",
                      "sponsorName",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "startDate",
                      "endDate",
                      "sponsorName",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "startDate",
                        "endDate",
                        "sponsorName",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors",
                    "users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors",
                      "users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "startDate": {
                            "description": "A date field",
                            "type": "string"
                          },
                          "endDate": {
                            "description": "A date field",
                            "type": "string"
                          },
                          "sponsorName": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.449Z",
                            "type": "string"
                          },
                          "mentors": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                            }
                          },
                          "users": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "name",
                          "startDate",
                          "endDate",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "program"
        ]
      },
      "post": {
        "operationId": "program/post/programs",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors",
                    "users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors",
                      "users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "endDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "sponsorName": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.456Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "startDate",
                        "endDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "program"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "startDate": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "endDate": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "sponsorName": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.455Z",
                        "type": "string"
                      },
                      "mentors": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "users": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "startDate",
                      "endDate",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/programs/{id}": {
      "get": {
        "operationId": "program/get/programs_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors",
                    "users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors",
                      "users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "startDate",
                    "endDate",
                    "sponsorName",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "startDate",
                      "endDate",
                      "sponsorName",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "startDate",
                      "endDate",
                      "sponsorName",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "startDate",
                        "endDate",
                        "sponsorName",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "endDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "sponsorName": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.453Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "startDate",
                        "endDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "program"
        ]
      },
      "put": {
        "operationId": "program/put/programs_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors",
                    "users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors",
                      "users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "endDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "sponsorName": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.463Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "startDate",
                        "endDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "program"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "startDate": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "endDate": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "sponsorName": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.458Z",
                        "type": "string"
                      },
                      "mentors": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "users": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "program/delete/programs_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "mentors",
                    "users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "mentors",
                      "users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "startDate",
                  "endDate",
                  "sponsorName",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "endDate": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "sponsorName": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.465Z",
                          "type": "string"
                        },
                        "mentors": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "startDate",
                        "endDate",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "program"
        ]
      }
    },
    "/reports": {
      "get": {
        "operationId": "report/get/reports",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "deadline",
                    "finished",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "deadline",
                      "finished",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "deadline",
                      "finished",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "deadline",
                        "finished",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "evaluations",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "evaluations",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "deadline": {
                            "description": "A date field",
                            "type": "string"
                          },
                          "finished": {
                            "description": "A boolean field",
                            "default": false,
                            "type": "boolean"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-09-12T06:37:57.469Z",
                            "type": "string"
                          },
                          "evaluations": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiEvaluationEvaluationDocument"
                            }
                          },
                          "user": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "deadline",
                          "finished",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "report"
        ]
      },
      "post": {
        "operationId": "report/post/reports",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "evaluations",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "evaluations",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "deadline": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "finished": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.475Z",
                          "type": "string"
                        },
                        "evaluations": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiEvaluationEvaluationDocument"
                          }
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "deadline",
                        "finished",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deadline": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "finished": {
                        "description": "A boolean field",
                        "default": false,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.474Z",
                        "type": "string"
                      },
                      "evaluations": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "deadline",
                      "finished",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "operationId": "report/get/reports_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "evaluations",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "evaluations",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "deadline",
                    "finished",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "deadline",
                      "finished",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "deadline",
                      "finished",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "deadline",
                        "finished",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "deadline": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "finished": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.472Z",
                          "type": "string"
                        },
                        "evaluations": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiEvaluationEvaluationDocument"
                          }
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "deadline",
                        "finished",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "report"
        ]
      },
      "put": {
        "operationId": "report/put/reports_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "evaluations",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "evaluations",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "deadline": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "finished": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.478Z",
                          "type": "string"
                        },
                        "evaluations": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiEvaluationEvaluationDocument"
                          }
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "deadline",
                        "finished",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deadline": {
                        "description": "A date field",
                        "type": "string"
                      },
                      "finished": {
                        "description": "A boolean field",
                        "default": false,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-09-12T06:37:57.477Z",
                        "type": "string"
                      },
                      "evaluations": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "report/delete/reports_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "evaluations",
                    "user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "evaluations",
                      "user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "deadline",
                  "finished",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "deadline": {
                          "description": "A date field",
                          "type": "string"
                        },
                        "finished": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-09-12T06:37:57.479Z",
                          "type": "string"
                        },
                        "evaluations": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiEvaluationEvaluationDocument"
                          }
                        },
                        "user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "deadline",
                        "finished",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/content-types": {
      "get": {
        "operationId": "content-type-builder/get/content_types",
        "parameters": [
          {
            "name": "kind",
            "in": "query",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "enum": [
                "collectionType",
                "singleType"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                          },
                          "plugin": {
                            "type": "string"
                          },
                          "apiID": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "object",
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "singularName": {
                                "type": "string"
                              },
                              "pluralName": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "draftAndPublish": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "collectionType",
                                  "singleType"
                                ]
                              },
                              "collectionName": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "media"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "multiple": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "allowedTypes": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "multiple"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "relation"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "relation": {
                                          "type": "string"
                                        },
                                        "target": {
                                          "type": "string",
                                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                        },
                                        "targetAttribute": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "autoPopulate": {
                                          "type": "boolean"
                                        },
                                        "mappedBy": {
                                          "type": "string"
                                        },
                                        "inversedBy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "relation",
                                        "target",
                                        "targetAttribute"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "component"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "component": {
                                          "type": "string"
                                        },
                                        "repeatable": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "component",
                                        "repeatable"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "dynamiczone"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "components": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                                          }
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "components"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "uid"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "targetField": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "unique": {
                                          "type": "boolean"
                                        },
                                        "default": {},
                                        "min": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "max": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "minLength": {
                                          "type": "number"
                                        },
                                        "maxLength": {
                                          "type": "number"
                                        },
                                        "enum": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "regex": {
                                          "type": "string"
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "configurable": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "visible": {
                                "type": "boolean"
                              },
                              "restrictRelationsTo": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "pluginOptions": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              "options": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              "reviewWorkflows": {
                                "type": "boolean"
                              },
                              "populateCreatorFields": {
                                "type": "boolean"
                              },
                              "comment": {
                                "type": "string"
                              },
                              "version": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "displayName",
                              "singularName",
                              "pluralName",
                              "description",
                              "draftAndPublish",
                              "kind",
                              "attributes",
                              "visible",
                              "restrictRelationsTo"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "uid",
                          "apiID",
                          "schema"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/content-types/{uid}": {
      "get": {
        "operationId": "content-type-builder/get/content_types_by_uid",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                        },
                        "plugin": {
                          "type": "string"
                        },
                        "apiID": {
                          "type": "string"
                        },
                        "schema": {
                          "type": "object",
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "singularName": {
                              "type": "string"
                            },
                            "pluralName": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "draftAndPublish": {
                              "type": "boolean"
                            },
                            "kind": {
                              "type": "string",
                              "enum": [
                                "collectionType",
                                "singleType"
                              ]
                            },
                            "collectionName": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "media"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "multiple": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "allowedTypes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "multiple"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "relation"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "relation": {
                                        "type": "string"
                                      },
                                      "target": {
                                        "type": "string",
                                        "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                      },
                                      "targetAttribute": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      },
                                      "autoPopulate": {
                                        "type": "boolean"
                                      },
                                      "mappedBy": {
                                        "type": "string"
                                      },
                                      "inversedBy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "relation",
                                      "target",
                                      "targetAttribute"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "component"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "component": {
                                        "type": "string"
                                      },
                                      "repeatable": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "component",
                                      "repeatable"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "dynamiczone"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "components": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                                        }
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "components"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "uid"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "targetField": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "unique": {
                                        "type": "boolean"
                                      },
                                      "default": {},
                                      "min": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "max": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "minLength": {
                                        "type": "number"
                                      },
                                      "maxLength": {
                                        "type": "number"
                                      },
                                      "enum": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "regex": {
                                        "type": "string"
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "configurable": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "visible": {
                              "type": "boolean"
                            },
                            "restrictRelationsTo": {
                              "anyOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "pluginOptions": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            "options": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            "reviewWorkflows": {
                              "type": "boolean"
                            },
                            "populateCreatorFields": {
                              "type": "boolean"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "displayName",
                            "singularName",
                            "pluralName",
                            "description",
                            "draftAndPublish",
                            "kind",
                            "attributes",
                            "visible",
                            "restrictRelationsTo"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "uid",
                        "apiID",
                        "schema"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/components": {
      "get": {
        "operationId": "content-type-builder/get/components",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                          },
                          "category": {
                            "type": "string"
                          },
                          "apiId": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "object",
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "icon": {
                                "type": "string"
                              },
                              "connection": {
                                "type": "string"
                              },
                              "collectionName": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "media"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "multiple": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "allowedTypes": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "multiple"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "relation"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "relation": {
                                          "type": "string"
                                        },
                                        "target": {
                                          "type": "string",
                                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                        },
                                        "targetAttribute": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "autoPopulate": {
                                          "type": "boolean"
                                        },
                                        "mappedBy": {
                                          "type": "string"
                                        },
                                        "inversedBy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "relation",
                                        "target",
                                        "targetAttribute"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "component"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "component": {
                                          "type": "string"
                                        },
                                        "repeatable": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "component",
                                        "repeatable"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "dynamiczone"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "components": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                                          }
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "components"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "uid"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "targetField": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "unique": {
                                          "type": "boolean"
                                        },
                                        "default": {},
                                        "min": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "max": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "minLength": {
                                          "type": "number"
                                        },
                                        "maxLength": {
                                          "type": "number"
                                        },
                                        "enum": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "regex": {
                                          "type": "string"
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "configurable": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "pluginOptions": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              }
                            },
                            "required": [
                              "displayName",
                              "description",
                              "attributes"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "uid",
                          "category",
                          "apiId",
                          "schema"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/components/{uid}": {
      "get": {
        "operationId": "content-type-builder/get/components_by_uid",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "pattern": "^[\\w-]+\\.[\\w-]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                        },
                        "category": {
                          "type": "string"
                        },
                        "apiId": {
                          "type": "string"
                        },
                        "schema": {
                          "type": "object",
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "icon": {
                              "type": "string"
                            },
                            "connection": {
                              "type": "string"
                            },
                            "collectionName": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "media"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "multiple": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "allowedTypes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "multiple"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "relation"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "relation": {
                                        "type": "string"
                                      },
                                      "target": {
                                        "type": "string",
                                        "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                      },
                                      "targetAttribute": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      },
                                      "autoPopulate": {
                                        "type": "boolean"
                                      },
                                      "mappedBy": {
                                        "type": "string"
                                      },
                                      "inversedBy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "relation",
                                      "target",
                                      "targetAttribute"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "component"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "component": {
                                        "type": "string"
                                      },
                                      "repeatable": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "component",
                                      "repeatable"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "dynamiczone"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "components": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                                        }
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "components"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "uid"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "targetField": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "unique": {
                                        "type": "boolean"
                                      },
                                      "default": {},
                                      "min": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "max": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "minLength": {
                                        "type": "number"
                                      },
                                      "maxLength": {
                                        "type": "number"
                                      },
                                      "enum": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "regex": {
                                        "type": "string"
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "configurable": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "pluginOptions": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            }
                          },
                          "required": [
                            "displayName",
                            "description",
                            "attributes"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "uid",
                        "category",
                        "apiId",
                        "schema"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/": {
      "post": {
        "operationId": "upload/post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "documentId": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "name": {
                          "type": "string"
                        },
                        "alternativeText": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "caption": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "width": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "height": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "formats": {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        "hash": {
                          "type": "string"
                        },
                        "ext": {
                          "type": "string"
                        },
                        "mime": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "previewUrl": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "folder": {
                          "type": "number"
                        },
                        "folderPath": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "provider_metadata": {
                          "anyOf": [
                            {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "number"
                        },
                        "updatedBy": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "name",
                        "hash",
                        "mime",
                        "size",
                        "url",
                        "folderPath",
                        "provider",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          },
                          "documentId": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "name": {
                            "type": "string"
                          },
                          "alternativeText": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "caption": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "height": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "formats": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {}
                          },
                          "hash": {
                            "type": "string"
                          },
                          "ext": {
                            "type": "string"
                          },
                          "mime": {
                            "type": "string"
                          },
                          "size": {
                            "type": "number"
                          },
                          "url": {
                            "type": "string"
                          },
                          "previewUrl": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "folder": {
                            "type": "number"
                          },
                          "folderPath": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "provider_metadata": {
                            "anyOf": [
                              {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "createdBy": {
                            "type": "number"
                          },
                          "updatedBy": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "documentId",
                          "name",
                          "hash",
                          "mime",
                          "size",
                          "url",
                          "folderPath",
                          "provider",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/files": {
      "get": {
        "operationId": "upload/get/files",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the results by specified fields",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "name": {
                        "type": "string"
                      },
                      "alternativeText": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "caption": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "width": {
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "height": {
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "formats": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {}
                      },
                      "hash": {
                        "type": "string"
                      },
                      "ext": {
                        "type": "string"
                      },
                      "mime": {
                        "type": "string"
                      },
                      "size": {
                        "type": "number"
                      },
                      "url": {
                        "type": "string"
                      },
                      "previewUrl": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "folder": {
                        "type": "number"
                      },
                      "folderPath": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "provider_metadata": {
                        "anyOf": [
                          {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {}
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "number"
                      },
                      "updatedBy": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "name",
                      "hash",
                      "mime",
                      "size",
                      "url",
                      "folderPath",
                      "provider",
                      "createdAt",
                      "updatedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/files/{id}": {
      "get": {
        "operationId": "upload/get/files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "alternativeText": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "caption": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "width": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "height": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "formats": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {}
                    },
                    "hash": {
                      "type": "string"
                    },
                    "ext": {
                      "type": "string"
                    },
                    "mime": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "previewUrl": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "folder": {
                      "type": "number"
                    },
                    "folderPath": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "provider_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "number"
                    },
                    "updatedBy": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "hash",
                    "mime",
                    "size",
                    "url",
                    "folderPath",
                    "provider",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      },
      "delete": {
        "operationId": "upload/delete/files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "alternativeText": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "caption": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "width": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "height": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "formats": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {}
                    },
                    "hash": {
                      "type": "string"
                    },
                    "ext": {
                      "type": "string"
                    },
                    "mime": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "previewUrl": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "folder": {
                      "type": "number"
                    },
                    "folderPath": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "provider_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "number"
                    },
                    "updatedBy": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "hash",
                    "mime",
                    "size",
                    "url",
                    "folderPath",
                    "provider",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/locales": {
      "get": {
        "operationId": "i18n/get/locales",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "name": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "publishedAt": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "isDefault": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "name",
                      "code",
                      "createdAt",
                      "updatedAt",
                      "publishedAt",
                      "isDefault"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "i18n"
        ]
      }
    },
    "/connect/(.*)": {
      "get": {
        "operationId": "users-permissions/get/connect_____",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/local": {
      "post": {
        "operationId": "users-permissions/post/auth_local",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "identifier",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/local/register": {
      "post": {
        "operationId": "users-permissions/post/auth_local_register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "jwt": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "documentId": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "confirmed": {
                              "type": "boolean"
                            },
                            "blocked": {
                              "type": "boolean"
                            },
                            "role": {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "type",
                                    "createdAt",
                                    "updatedAt"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "publishedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "documentId",
                            "username",
                            "email",
                            "provider",
                            "confirmed",
                            "blocked",
                            "createdAt",
                            "updatedAt",
                            "publishedAt"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "jwt",
                        "user"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "documentId": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "confirmed": {
                              "type": "boolean"
                            },
                            "blocked": {
                              "type": "boolean"
                            },
                            "role": {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "type",
                                    "createdAt",
                                    "updatedAt"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "publishedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "documentId",
                            "username",
                            "email",
                            "provider",
                            "confirmed",
                            "blocked",
                            "createdAt",
                            "updatedAt",
                            "publishedAt"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "operationId": "users-permissions/get/auth_by_provider_callback",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "users-permissions/post/auth_forgot_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "users-permissions/post/auth_reset_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "password",
                  "passwordConfirmation"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/email-confirmation": {
      "get": {
        "operationId": "users-permissions/get/auth_email_confirmation",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/send-email-confirmation": {
      "post": {
        "operationId": "users-permissions/post/auth_send_email_confirmation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "sent": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "email",
                    "sent"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "operationId": "users-permissions/post/auth_change_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "password",
                  "passwordConfirmation"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "operationId": "users-permissions/get/users_count",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "users-permissions/get/users",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the results by specified fields",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "documentId": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "confirmed": {
                        "type": "boolean"
                      },
                      "blocked": {
                        "type": "boolean"
                      },
                      "role": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "type": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "description",
                              "type",
                              "createdAt",
                              "updatedAt"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "publishedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "username",
                      "email",
                      "provider",
                      "confirmed",
                      "blocked",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "post": {
        "operationId": "users-permissions/post/users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "number"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "operationId": "users-permissions/get/users_me",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "users-permissions/get/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "put": {
        "operationId": "users-permissions/put/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "users-permissions/delete/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "users-permissions/get/roles_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "type": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        },
                        "nb_users": {
                          "type": "number"
                        },
                        "permissions": {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "controllers": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      },
                                      "policy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "enabled",
                                      "policy"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            },
                            "required": [
                              "controllers"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "users": {
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "name",
                        "description",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "role"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/roles": {
      "get": {
        "operationId": "users-permissions/get/roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "documentId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "type": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "publishedAt": {
                            "type": "string"
                          },
                          "nb_users": {
                            "type": "number"
                          },
                          "permissions": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "controllers": {
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "type": "object",
                                    "propertyNames": {
                                      "type": "string"
                                    },
                                    "additionalProperties": {
                                      "type": "object",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean"
                                        },
                                        "policy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "enabled",
                                        "policy"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                }
                              },
                              "required": [
                                "controllers"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "users": {
                            "type": "array",
                            "items": {}
                          }
                        },
                        "required": [
                          "id",
                          "documentId",
                          "name",
                          "description",
                          "type",
                          "createdAt",
                          "updatedAt",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "roles"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "post": {
        "operationId": "users-permissions/post/roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/roles/{role}": {
      "put": {
        "operationId": "users-permissions/put/roles_by_role",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {}
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "users-permissions/delete/roles_by_role",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/permissions": {
      "get": {
        "operationId": "users-permissions/get/permissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "permissions": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "controllers": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  },
                                  "policy": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "enabled",
                                  "policy"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        },
                        "required": [
                          "controllers"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "permissions"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/registration-info": {
      "get": {
        "operationId": "users-permissions/get/registration_info",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/register": {
      "post": {
        "operationId": "users-permissions/post/register",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiActivityTypeActivityTypeDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A text field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.249Z",
            "type": "string"
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiActivityTypeActivityTypeDocument"
      },
      "MatrixQuestionEntry": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "question": {
            "description": "A string field",
            "type": "string"
          },
          "option_1": {
            "description": "A text field",
            "type": "string"
          },
          "option_2": {
            "description": "A text field",
            "type": "string"
          },
          "option_3": {
            "description": "A text field",
            "type": "string"
          },
          "option_4": {
            "description": "A text field",
            "type": "string"
          },
          "option_5": {
            "description": "A text field",
            "type": "string"
          },
          "tag": {
            "description": "A string field",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "id": "MatrixQuestionEntry"
      },
      "PluginUsersPermissionsPermissionDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "action": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.263Z",
            "type": "string"
          },
          "role": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsRoleDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "action",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsPermissionDocument"
      },
      "PluginUsersPermissionsRoleDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "description": {
            "description": "A string field",
            "type": "string"
          },
          "type": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.262Z",
            "type": "string"
          },
          "permissions": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsPermissionDocument"
            }
          },
          "users": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "name",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsRoleDocument"
      },
      "PluginUploadFileDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "alternativeText": {
            "description": "A string field",
            "type": "string"
          },
          "caption": {
            "description": "A string field",
            "type": "string"
          },
          "width": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "height": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "formats": {
            "description": "A JSON field"
          },
          "hash": {
            "description": "A string field",
            "type": "string"
          },
          "ext": {
            "description": "A string field",
            "type": "string"
          },
          "mime": {
            "description": "A string field",
            "type": "string"
          },
          "size": {
            "description": "A decimal field",
            "type": "number"
          },
          "url": {
            "description": "A string field",
            "type": "string"
          },
          "previewUrl": {
            "description": "A string field",
            "type": "string"
          },
          "provider": {
            "description": "A string field",
            "type": "string"
          },
          "provider_metadata": {
            "description": "A JSON field"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.268Z",
            "type": "string"
          },
          "related": {}
        },
        "required": [
          "documentId",
          "id",
          "name",
          "hash",
          "mime",
          "size",
          "url",
          "provider",
          "publishedAt",
          "related"
        ],
        "additionalProperties": false,
        "id": "PluginUploadFileDocument"
      },
      "EvaluationDimensionEntry": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "comment": {
            "description": "A text field",
            "type": "string"
          },
          "quiz": {
            "description": "A component field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvaluationQuestionEntry"
            }
          }
        },
        "required": [
          "comment"
        ],
        "additionalProperties": false,
        "id": "EvaluationDimensionEntry"
      },
      "EvaluationQuestionEntry": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "answer": {
            "description": "An integer field",
            "type": "integer",
            "minimum": 0,
            "maximum": 4
          }
        },
        "required": [
          "answer"
        ],
        "additionalProperties": false,
        "id": "EvaluationQuestionEntry"
      },
      "ApiEvaluationEvaluationDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "email": {
            "description": "An email field",
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.272Z",
            "type": "string"
          },
          "dimensions": {
            "description": "A component field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvaluationDimensionEntry"
            }
          },
          "report": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiReportReportDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "email",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiEvaluationEvaluationDocument"
      },
      "ApiReportReportDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "deadline": {
            "description": "A date field",
            "type": "string"
          },
          "finished": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.271Z",
            "type": "string"
          },
          "evaluations": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiEvaluationEvaluationDocument"
            }
          },
          "user": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "deadline",
          "finished",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiReportReportDocument"
      },
      "ApiDomainDomainDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.275Z",
            "type": "string"
          },
          "mentors": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiDomainDomainDocument"
      },
      "ApiProgramProgramDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "startDate": {
            "description": "A date field",
            "type": "string"
          },
          "endDate": {
            "description": "A date field",
            "type": "string"
          },
          "sponsorName": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.279Z",
            "type": "string"
          },
          "mentors": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          },
          "users": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "name",
          "startDate",
          "endDate",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiProgramProgramDocument"
      },
      "ApiActivityActivityDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "startDate": {
            "description": "A date field",
            "type": "string"
          },
          "notes": {
            "description": "A richtext field",
            "type": "string"
          },
          "duration": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.281Z",
            "type": "string"
          },
          "type": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiActivityTypeActivityTypeDocument"
          },
          "dimension": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
          },
          "mentor": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
          },
          "user": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "startDate",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiActivityActivityDocument"
      },
      "ApiMentorshipRequestMentorshipRequestDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.283Z",
            "type": "string"
          },
          "mentor": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
          },
          "user": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiMentorshipRequestMentorshipRequestDocument"
      },
      "PluginUsersPermissionsUserDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "username": {
            "description": "A string field",
            "type": "string"
          },
          "email": {
            "description": "An email field",
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          },
          "provider": {
            "description": "A string field",
            "type": "string"
          },
          "confirmed": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "blocked": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "ongName": {
            "description": "A string field",
            "type": "string"
          },
          "ongIdentificationNumber": {
            "description": "A string field",
            "type": "string"
          },
          "county": {
            "description": "A string field",
            "type": "string"
          },
          "city": {
            "description": "A string field",
            "type": "string"
          },
          "phone": {
            "description": "A string field",
            "type": "string"
          },
          "website": {
            "description": "A string field",
            "type": "string"
          },
          "keywords": {
            "description": "A string field",
            "type": "string"
          },
          "description": {
            "description": "A text field",
            "type": "string"
          },
          "contactFirstName": {
            "description": "A string field",
            "type": "string"
          },
          "contactLastName": {
            "description": "A string field",
            "type": "string"
          },
          "contactEmail": {
            "description": "A string field",
            "type": "string"
          },
          "contactPhone": {
            "description": "A string field",
            "type": "string"
          },
          "accountFacebook": {
            "description": "A string field",
            "type": "string"
          },
          "accountTwitter": {
            "description": "A string field",
            "type": "string"
          },
          "accountTiktok": {
            "description": "A string field",
            "type": "string"
          },
          "accountInstagram": {
            "description": "A string field",
            "type": "string"
          },
          "accountLinkedin": {
            "description": "A string field",
            "type": "string"
          },
          "bio": {
            "description": "A text field",
            "type": "string"
          },
          "expertise": {
            "description": "A text field",
            "type": "string"
          },
          "firstName": {
            "description": "A string field",
            "type": "string"
          },
          "lastName": {
            "description": "A string field",
            "type": "string"
          },
          "available": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.260Z",
            "type": "string"
          },
          "role": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsRoleDocument"
          },
          "avatar": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "logo": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "reports": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiReportReportDocument"
            }
          },
          "domains": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiDomainDomainDocument"
            }
          },
          "programs": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProgramProgramDocument"
            }
          },
          "dimensions": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiDimensionDimensionDocument"
            }
          },
          "program": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiProgramProgramDocument"
          },
          "mentorActivities": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiActivityActivityDocument"
            }
          },
          "userActivities": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiActivityActivityDocument"
            }
          },
          "mentorSessions": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMentorshipRequestMentorshipRequestDocument"
            }
          },
          "userSessions": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMentorshipRequestMentorshipRequestDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "username",
          "email",
          "confirmed",
          "blocked",
          "available",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsUserDocument"
      },
      "ApiDimensionDimensionDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "link": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-09-12T06:37:57.251Z",
            "type": "string"
          },
          "quiz": {
            "description": "A component field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixQuestionEntry"
            }
          },
          "mentors": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          },
          "activities": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiActivityActivityDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "name",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiDimensionDimensionDocument"
      }
    }
  }
}